{"version":3,"sources":["webpack:///src/layouts/MainLayout.vue","webpack:///src/sass/functions/_px-to.scss","webpack:///src/layouts/Header.vue","webpack:///src/sass/variables/_colors.scss","webpack:///src/sass/base/_media-queries.scss","webpack:///src/components/About.vue","webpack:///src/layouts/Main.vue","webpack:///src/layouts/Footer.vue","webpack:///src/components/header/MainNav.vue","webpack:///src/sass/fonts/_comfortaa.scss","webpack:///src/components/header/Branding.vue","webpack:///src/sass/base/_core.scss","webpack:///src/sass/mixins/_font-legibility.scss","webpack:///src/sass/mixins/_font-smoothing.scss","webpack:///src/sass/variables/_typography.scss","webpack:///src/sass/mixins/_z-index.scss","webpack:///src/sass/base/_normalize.scss","webpack:///src/App.vue","webpack:///src/sass/base/_accessibility.scss","webpack:///src/sass/mixins/_font-size.scss","webpack:///src/sass/base/_alignments.scss","webpack:///src/sass/mixins/_margin-auto.scss","webpack:///src/sass/mixins/_clearfix.scss","webpack:///src/sass/base/_elements.scss","webpack:///src/sass/base/_media.scss","webpack:///src/sass/base/_typography.scss","webpack:///src/views/Home.vue"],"names":[],"mappings":"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","file":"app.cc65f232.css","sourcesContent":["@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.layout {\n  position: relative;\n  display: grid;\n  grid-template-rows: px-to-em(200) 1fr px-to-em(30);\n  height: 100vh;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Px To ~\n// ========================================\n\n// Convert px to em\n//\n// @param {int} $size The px amount to convert.\n//\n// @return string The converted px size.\n@function px-to-em($pxval, $base: $font-size-base) {\n\t@if not unitless($pxval) {\n\t\t$pxval: strip-units($pxval);\n\t}\n\t@if not unitless($base) {\n\t\t$base: strip-units($base);\n\t}\n\t@return ($pxval / $base) * 1em;\n}\n\n// Convert px to rem\n//\n// @param {int} $size The px amount to convert.\n//\n// @return string The converted px size.\n@function px-to-rem($pxval, $base: $font-size-base) {\n\t@if not unitless($pxval) {\n\t\t$pxval: strip-units($pxval);\n\t}\n\t@if not unitless($base) {\n\t\t$base: strip-units($base);\n\t}\n\t@return ($pxval / $base) * 1rem;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~@/sass/base/_media-queries';\n@import '~@/sass/mixins/index';\n\n.header {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  grid-row: 1;\n  align-items: center;\n  justify-content: center;\n  height: px-to-em(200);\n  padding: 1rem;\n  background: $goldenrod;\n  border-bottom: 2px solid darken($goldenrod, 20%);\n  &::after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    content: '';\n    background: url('~@assets/hero-image.jpg') center center;\n    opacity: 0.1;\n  }\n\n  @include media('>tablet-sm') {\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 1.5rem 1rem;\n  }\n}\n","@charset \"UTF-8\";\n// ========================================\n// Colors\n// ========================================\n\n// Greyscale\n$black: hsl(0, 0%, 0%);\n$grey5: hsl(0, 0%, 5%);\n$grey10: hsl(0, 0%, 10%);\n$grey15: hsl(0, 0%, 15%);\n$grey20: hsl(0, 0%, 20%);\n$gray25: hsl(0, 0%, 25%);\n$grey30: hsl(0, 0%, 30%);\n$grey35: hsl(0, 0%, 35%);\n$grey40: hsl(0, 0%, 40%);\n$grey45: hsl(0, 0%, 45%);\n$grey50: hsl(0, 0%, 50%);\n$grey55: hsl(0, 0%, 55%);\n$grey60: hsl(0, 0%, 60%);\n$grey65: hsl(0, 0%, 65%);\n$grey70: hsl(0, 0%, 70%);\n$grey75: hsl(0, 0%, 75%);\n$grey70: hsl(0, 0%, 80%);\n$grey85: hsl(0, 0%, 85%);\n$grey90: hsl(0, 0%, 90%);\n$grey95: hsl(0, 0%, 95%);\n$white: hsl(0, 0%, 100%);\n\n$yellow: hsl(60, 100%, 50%);\n\n$mineshaft: hsl(0, 0%, 15%);\n$goldenrod: hsl(45, 99%, 70%);\n$bondiblue: hsl(188, 100%, 36%);\n$midgray: hsl(250, 6%, 43%);\n$athensgray: hsl(210, 14%, 95%);\n\n$image-box-shadow: 2px 2px 5px 0 hsla(0, 0%, 15%, 0.2);\n\n$color-background-screen: $athensgray;\n$color-text-screen: $midgray;\n$color-screen-reader-box-shadow: hsla(0, 0%, 0%, 0.6);\n$color-background-body: $white;\n$color-text-main: $mineshaft;\n$color-background-hr: $mineshaft;\n$color-border-abbr: $mineshaft;\n","@charset \"UTF-8\";\n// ========================================\n// Media Queries http://include-media.com\n// ========================================\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n\t\"phone\": 320px,\n\t\"tablet\": 768px,\n\t\"desktop\": 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n\t\"screen\": \"screen\",\n\t\"print\": \"print\",\n\t\"handheld\": \"handheld\",\n\t\"landscape\": \"(orientation: landscape)\",\n\t\"portrait\": \"(orientation: portrait)\",\n\t\"retina2x\": \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n\t\"retina3x\": \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\"\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n\t\"px\": 1,\n\t\"em\": 0.01,\n\t\"rem\": 0.1,\n\t\"\": 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts \n///                 the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the \n///                 static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n\t@if feature-exists(\"at-error\") {\n\t\t@error $message;\n\t} @else {\n\t\t@warn $message; // sass-lint:disable-line no-warn\n\t\t$_: noop();\n\t}\n\n\t@return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n\t@if im-log($message) {} // sass-lint:disable-line no-empty-rulesets\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {} // sass-lint:disable-line no-empty-rulesets\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n\t$no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n\t@if not $no-media-breakpoint-value {\n\t\t@if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {} // sass-lint:disable-line no-empty-rulesets\n\t}\n\n\t@each $condition in $conditions {\n\t\t@if not map-has-key($media-expressions, $condition) {\n\t\t\t$operator: get-expression-operator($condition);\n\t\t\t$prefix: get-expression-prefix($operator);\n\t\t\t$value: get-expression-value($condition, $operator);\n\n\t\t\t@if ($prefix == \"max\" and $value <= $no-media-breakpoint-value)or ($prefix == \"min\" and $value > $no-media-breakpoint-value) { // sass-lint:disable-line max-line-length\n\t\t\t\t@return false;\n\t\t\t}\n\t\t} @else if not index($im-no-media-expressions, $condition) {\n\t\t\t@return false;\n\t\t}\n\t}\n\n\t@return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n\t@each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n\t\t@if str-index($expression, $operator) {\n\t\t\t@return $operator;\n\t\t}\n\t}\n\n\t// It is not possible to include a mixin inside a function, so we have to\n\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n\t// functions cannot be called anywhere in Sass, we need to hack the call in\n\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\n\t$_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n\t$operator-index: str-index($expression, $operator);\n\t$parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n\t$dimension: \"width\";\n\n\t@if str-length($parsed-dimension) > 0 {\n\t\t$dimension: $parsed-dimension;\n\t}\n\n\t@return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n\t@return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n\t$operator-index: str-index($expression, $operator);\n\t$value: str-slice($expression, $operator-index + str-length($operator));\n\n\t@if map-has-key($breakpoints, $value) {\n\t\t$value: map-get($breakpoints, $value);\n\t} @else {\n\t\t$value: to-number($value);\n\t}\n\n\t$interval: map-get($unit-intervals, unit($value));\n\n\t@if not $interval {\n\t\t// It is not possible to include a mixin inside a function, so we have to\n\t\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n\t\t// functions cannot be called anywhere in Sass, we need to hack the call in\n\t\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n\t\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\n\t\t$_: im-log(\"Unknown unit `#{unit($value)}`.\");\n\t}\n\n\t@if $operator == \">\" {\n\t\t$value: $value + $interval;\n\t} @else if $operator == \"<\" {\n\t\t$value: $value - $interval;\n\t}\n\n\t@return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n\t// If it is part of $media-expressions, it has no operator\n\t// then there is no need to go any further, just return the value\n\t@if map-has-key($media-expressions, $expression) {\n\t\t@return map-get($media-expressions, $expression);\n\t}\n\n\t$operator: get-expression-operator($expression);\n\t$dimension: get-expression-dimension($expression, $operator);\n\t$prefix: get-expression-prefix($operator);\n\t$value: get-expression-value($expression, $operator);\n\n\t@return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n\t@if length($list) < 1 or $start > $end {\n\t\t@return ();\n\t}\n\n\t$result: ();\n\n\t@for $i from $start through $end {\n\t\t$result: append($result, nth($list, $i));\n\t}\n\n\t@return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n\t@if type-of($value) == \"number\" {\n\t\t@return $value;\n\t} @else if type-of($value) != \"string\" {\n\t\t$_: im-log(\"Value for `to-number` should be a number or a string.\");\n\t}\n\n\t$first-character: str-slice($value, 1, 1);\n\t$result: 0;\n\t$digits: 0;\n\t$minus: ($first-character == \"-\");\n\t$numbers: (\"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8, \"9\": 9);\n\n\t// Remove +/- sign if present at first character\n\t@if ($first-character == \"+\" or $first-character == \"-\") {\n\t\t$value: str-slice($value, 2);\n\t}\n\n\t@for $i from 1 through str-length($value) {\n\t\t$character: str-slice($value, $i, $i);\n\n\t\t@if not (index(map-keys($numbers), $character) or $character == \".\") {\n\t\t\t@return to-length(if($minus, -$result, $result), str-slice($value, $i));\n\t\t}\n\n\t\t@if $character == \".\" {\n\t\t\t$digits: 1;\n\t\t} @else if $digits == 0 {\n\t\t\t$result: $result * 10 + map-get($numbers, $character);\n\t\t} @else {\n\t\t\t$digits: $digits * 10;\n\t\t\t$result: $result + map-get($numbers, $character) / $digits;\n\t\t}\n\t}\n\n\t@return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n\t$units: (\"px\": 1px, \"cm\": 1cm, \"mm\": 1mm, \"%\": 1%, \"ch\": 1ch, \"pc\": 1pc, \"in\": 1in, \"em\": 1em, \"rem\": 1rem, \"pt\": 1pt, \"ex\": 1ex, \"vw\": 1vw, \"vh\": 1vh, \"vmin\": 1vmin, \"vmax\": 1vmax); // sass-lint:disable-line max-line-length\n\n\t@if not index(map-keys($units), $unit) {\n\t\t$_: im-log(\"Invalid unit `#{$unit}`.\");\n\t}\n\n\t@return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n\t// Save global configuration\n\t$global-breakpoints: $breakpoints;\n\t$global-media-expressions: $media-expressions;\n\n\t// Update global configuration\n\t$breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n\t$media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n\t@content;\n\n\t// Restore global configuration\n\t$breakpoints: $global-breakpoints !global;\n\t$media-expressions: $global-media-expressions !global;\n}\n\n///\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n\t@if ($im-media-support and length($conditions) == 0) or (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) { // sass-lint:disable-line max-line-length\n\t\t@content;\n\t} @else if ($im-media-support and length($conditions) > 0) {\n\t\t@media #{unquote(parse-expression(nth($conditions, 1)))} {\n\t\t\t// Recursive call\n\t\t\t@include media(slice($conditions, 2)...) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.about {\n  flex: 0 1 auto;\n  max-width: px-to-em(500);\n  line-height: 1.4;\n}\n.social {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: 4rem;\n  &__links {\n    color: $mineshaft;\n    text-decoration: none;\n  }\n  &__links:hover {\n    color: lighten($mineshaft, 20%);\n  }\n  &__icons {\n    display: inline-block;\n    flex: 0 1 auto;\n    width: px-to-em(30);\n    height: px-to-em(30);\n  }\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.main {\n  grid-row: 2 / 3;\n  max-width: px-to-em(1200);\n  padding: 4em 1em 4em;\n  margin: 0 auto;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.footer {\n  display: flex;\n  flex-direction: column;\n  grid-row: 3;\n  align-items: center;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~@/sass/base/_media-queries';\n@import '~@/sass/mixins/index';\n\n.nav {\n  z-index: 1;\n  display: flex;\n  flex: 0 1 auto;\n  align-items: flex-end;\n  justify-content: space-between;\n  font-family: 'Comfortaa', Arial, Helvetica, sans-serif;\n  font-size: 1.2em;\n  &__item {\n    margin: 0 0.5em;\n    color: $mineshaft;\n  }\n  &__item:hover {\n    color: lighten($mineshaft, 20%);\n  }\n\n  @include media('>mobile-lg') {\n    font-size: 1.5em;\n  }\n}\n","@charset \"UTF-8\";\n\n// ========================================\n// Comfortaa Font\n// ========================================\n\n// cyrillic-ext\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4QIFqL_KWxWMT.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n// cyrillic\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4SYFqL_KWxWMT.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n// greek\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4ToFqL_KWxWMT.woff2) format('woff2');\n  unicode-range: U+0370-03FF;\n}\n// vietnamese\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4QoFqL_KWxWMT.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n}\n// latin-ext\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4Q4FqL_KWxWMT.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n// latin\n@font-face {\n  font-family: 'Comfortaa';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Comfortaa Regular'), local('Comfortaa-Regular'),\n    url(~@/assets/fonts/comfortaa/1Ptsg8LJRfWJmhDAuUs4TYFqL_KWxQ.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC,\n    U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~@sass/fonts/comfortaa';\n@import '~@/sass/base/_media-queries';\n@import '~@/sass/mixins/index';\n\n.branding {\n  z-index: 1;\n  flex: 0 1 auto;\n  margin-bottom: 2em;\n  &__heading {\n    position: relative;\n    margin: 0;\n    font-size: 3em;\n  }\n  &__heading--link {\n    color: $mineshaft;\n    text-decoration: none;\n  }\n\n  @include media('>tablet-sm') {\n    margin: 0;\n  }\n}\n","@charset \"UTF-8\";\n// ========================================\n// Core\n// ========================================\n\nhtml {\n\t@include font-legibility;\n\t@include font-smoothing;\n\t@include z-index(\"base\");\n\t-ms-text-size-adjust: 100%;\n\t-webkit-text-size-adjust: 100%;\n\tbackground-color: $color-background-body;\n\tcolor: $color-text-main;\n\tfont-family: $font-sans;\n\tfont-size: $font-size-base + px;\n\tline-height: 1.15;\n}\n\nbody {\n\tmargin: 0;\n}\n\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Font Legibility\n// ========================================\n\n// Improve the font rendering to better match client PSDs.\n// Side effects include: slower rednering of pages.\n// Use only when necessary!\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-legibility;\n//     }\n//\n//   Output.\n//     .foo {\n//        text-rendering: optimizeLegibility;\n//        -moz-font-feature-settings: 'liga', 'kern';\n//        -moz-osx-font-smoothing: grayscale;\n//        -webkit-font-smoothing: antialiased;\n//     }\n\n@mixin font-legibility {\n\t-moz-font-feature-settings: \"liga\", \"kern\";\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Fomt Smoothing\n// ========================================\n\n// Improve the font rendering to better match client PSDs.\n// Side effects include: slower rendering of pages.\n// Use only when necessary!\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-smoothing;\n//     }\n//\n//   Output.\n//     .foo {\n//\t\t\t -webkit-font-smoothing: antialiased;\n//\t\t\t -moz-osx-font-smoothing: grayscale;\n//     }\n\n@mixin font-smoothing {\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Typography\n// ========================================\n\n$font-sans:  Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n$font-serif: Georgia, Times, \"Times New Roman\", serif;\n$font-code: Monaco, Consolas, \"DejaVu Sans Mono\", monospace;\n$font-pre: \"Courier 10 Pitch\", Courier, monospace;\n\n$line-height-body: 1.725;\n$line-height-pre: $line-height-body;\n$font-size-base: 16;\n","@charset \"UTF-8\";\n// ========================================\n// z-index\n// ========================================\n// The layers, add them here.\n$layers: ();\n\n// z-index Mixin used to automatically assign z-index based on position in $layers\n@mixin z-index($layer, $position: relative) {\n\tposition: $position;\n\tz-index: layer-index($layer);\n}\n","@charset \"UTF-8\";\n// ========================================\n// Media\n// ========================================\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n\tdisplay: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n\tdisplay: inline-block;\n}\n\naudio:not([controls]) {\n\tdisplay: none;\n\theight: 0;\n}\n\nprogress {\n\tvertical-align: baseline;\n}\n\ntemplate,\n[hidden] {\n\tdisplay: none;\n}\n\na {\n\t-webkit-text-decoration-skip: objects;\n\tbackground-color: transparent;\n\n\t&:active,\n\t&:hover {\n\t\toutline-width: 0;\n\t}\n}\n\nabbr[title] {\n\tborder-bottom: none;\n\ttext-decoration: underline;\n\ttext-decoration: underline dotted; // sass-lint:disable-line no-duplicate-properties\n}\n\nb,\nstrong {\n\tfont-weight: inherit;\n}\n\ndfn {\n\tfont-style: italic;\n}\n\nh1 {\n\tfont-size: 2em;\n\tmargin: 0.67rem 0;\n}\n\nmark {\n\tbackground-color: $yellow;\n\tcolor: $black;\n}\n\nsmall {\n\tfont-size: 80%;\n}\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\nimg {\n\tborder-style: none;\n}\n\nsvg:not(:root) {\n\toverflow: hidden;\n}\n\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: monospace, monospace;\n\tfont-size: 1em;\n}\n\nfigure {\n\tmargin: 0;\n}\n\nhr {\n\tbox-sizing: content-box;\n\theight: 0;\n\toverflow: visible;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont: inherit;\n\tmargin: 0;\n}\n\noptgroup {\n\tfont-weight: bold;\n}\n\nbutton,\ninput {\n\toverflow: visible;\n}\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n\t-webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\nfieldset {\n\tborder: 1px solid $grey70;\n\tmargin: 0 px-to-rem(2);\n\tpadding: 0.35rem 0.625rem 0.75rem;\n}\n\nlegend {\n\tbox-sizing: border-box;\n\tcolor: inherit;\n\tdisplay: table;\n\tmax-width: 100%;\n\tpadding: 0;\n\twhite-space: normal;\n}\n\ntextarea {\n\toverflow: auto;\n}\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n\tbox-sizing: border-box;\n\tpadding: 0;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n[type=\"search\"] {\n\t-webkit-appearance: textfield;\n\toutline-offset: -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n::-webkit-input-placeholder {\n\tcolor: inherit;\n\topacity: 0.54;\n}\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button;\n\tfont: inherit;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~@sass/base/index';\n@import '../node_modules/animate.css/animate.css';\n\nhtml,\nbody {\n  height: 100%;\n}\n.app {\n  font-family: 'Comfortaa', Arial, Helvetica, sans-serif;\n}\n.page {\n  position: relative;\n  width: 100%;\n}\n","@charset \"UTF-8\";\n\n// ========================================\n// Accessibility\n// ========================================\n.screen-reader-text {\n  clip: rect(1px, 1px, 1px, 1px);\n  height: px-to-rem(1);\n  overflow: hidden;\n  position: absolute;\n  width: px-to-rem(1);\n\n  &:focus {\n    @include font-size(0.875);\n    background-color: $color-background-screen;\n    box-shadow: 0 0 2px 2px $color-screen-reader-box-shadow;\n    clip: auto;\n    color: $color-text-screen;\n    display: block;\n    font-weight: bold;\n    height: auto;\n    left: 5px;\n    line-height: normal;\n    padding: px-to-rem(15) px-to-rem(23) px-to-rem(14);\n    text-decoration: none;\n    top: 5px;\n    width: auto;\n    z-index: 100000;\n  }\n}\n","@charset \"UTF-8\";\n// ========================================\n// Font Legibility\n// ========================================\n\n// Formats font size to rem with a px fallback\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-size(16);\n//     }\n//\n//   Output.\n//     .foo {\n//        font-size: 16px;\n//        font-size: 1rem;\n//     }\n\n@mixin font-size($size-value: 1px) {\n\tfont-size: $size-value;\n\tfont-size: rem($size-value); // sass-lint:disable-line no-duplicate-properties\n}\n","@charset \"UTF-8\";\n// ========================================\n// Alignments\n// ========================================\n\n// Left Align\n.alignleft {\n\tdisplay: inline;\n\tfloat: left;\n\tmargin: 0 px-to-rem($font-size-base) 0 0;\n}\n\n// Right Align\n.alignright {\n\tdisplay: inline;\n\tfloat: right;\n\tmargin: 0 0 0 px-to-rem($font-size-base);\n}\n\n// Center Align\n.aligncenter {\n\t@include margin-auto;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Margin auto\n// ========================================\n\n/// Horizontally center a block element\n///\n/// @example scss - Basic Usage Sass\n///    .center-my-block-thingie {\n///        @include margin-auto();\n///    }\n///\n/// @example scss - Basic Usage CSS Output\n///    .center-my-block-thingie {\n///        display: block;\n///        margin-left: auto;\n///        margin-right: auto;\n///    }\n\n@mixin margin-auto {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Clearfix\n// ========================================\n\n// Add a cleafix to elemets\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include clearfix;\n//     }\n//\n//   Output.\n//     .foo::before, .foo::after {\n//        content: \"\";\n//        display: table;\n//     }\n//     .foo::after {\n//        clear: both;\n//     }\n\n\n@mixin clearfix {\n\t&::before,\n\t&::after {\n\t\tcontent: \"\";\n\t\tdisplay: table;\n\t}\n\n\t&::after {\n\t\tclear: both;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// HTML Elements\n// ========================================\n\n// Iframes\nembed,\niframe,\nobject {\n\tmax-width: 100%;\n}\n\nhr {\n\tbackground-color: $color-background-hr;\n\tborder: none;\n\theight: px-to-px-to-rem(1);\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n\twidth: auto;\n}\n\nfigure {\n\tmargin: 0;\n}\n\n// Lists\nul,\nol {\n\tmargin: 0 0 px-to-rem($font-size-base) px-to-rem($font-size-base);\n}\n\nul {\n\tlist-style: disc;\n}\n\nol {\n\tlist-style: decimal;\n}\n\nli > ul,\nli > ol {\n\tmargin: 0 0 0 px-to-rem($font-size-base);\n}\n\ndt {\n\tfont-weight: 700;\n}\n\ndd {\n\tmargin: 0 px-to-rem($font-size-base) px-to-rem($font-size-base) 0;\n}\n\n// Tables\ntable {\n\theight: auto;\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n\twidth: 100%;\n}\n\nth {\n\tfont-weight: 700;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Media\n// ========================================\n\n// Images\nimg {\n\theight: auto;\n\tmax-width: 100%;\n}\n\n// Fluid embed\n.fluid-embed {\n\t@include media(\"<=tablet\") {\n\t\tpadding-bottom: calc(56.25% - 2.1875rem); // For ratio 16:9. 75% if ratio is 4:3 rem(35);\n\t}\n\n\theight: 0;\n\toverflow: hidden;\n\tpadding-bottom: 56.25%; // For ratio 16:9. 75% if ratio is 4:3 rem(35);\n\tposition: relative;\n\n\tembed,\n\tobject,\n\tiframe {\n\t\theight: 100%;\n\t\tleft: 0;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t}\n}\n\n// Center image background\n.image-as-background {\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n}\n\n// Video as background\n.video-as-background {\n\tdisplay: block;\n\theight: 100%;\n\tobject-fit: cover;\n\tobject-position: center top;\n\tposition: absolute;\n\twidth: 100%;\n\tz-index: 1;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Typography\n// ========================================\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n\t@include font-smoothing;\n}\n\n// Headers and Paragraphs\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6,\np {\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n}\n\nb,\nstrong {\n\tfont-weight: 700;\n}\n\ndfn,\ncite,\nem,\ni {\n\tfont-style: italic;\n}\n\nblockquote,\nq {\n\tmargin: 0 px-to-rem($font-size-base);\n\tquotes: \"\" \"\";\n\n\t&::before,\n\t&::after {\n\t\tcontent: \"\";\n\t}\n}\n\naddress {\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n}\n\npre {\n\tfont-family: $font-pre;\n\tfont-size: px-to-rem($font-size-base);\n\tline-height: $line-height-pre;\n\tmargin: 0 0 px-to-rem($font-size-base);\n\tmax-width: 100%;\n\toverflow: auto;\n\tpadding: px-to-rem($font-size-base);\n}\n\ncode,\nkbd,\ntt,\nvar {\n\tfont-family: $font-code;\n\tfont-size: px-to-rem($font-size-base);\n}\n\nabbr,\nacronym {\n\tborder-bottom: 1px dotted $color-border-abbr;\n\tcursor: help;\n}\n\nmark,\nins {\n\ttext-decoration: none;\n}\n\nsup,\nsub {\n\tfont-size: 75%;\n\theight: 0;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsup {\n\tbottom: 1ex;\n}\n\nsub {\n\ttop: 0.5ex;\n}\n\nsmall {\n\tfont-size: 75%;\n}\n\nbig {\n\tfont-size: 125%;\n}\n","@import \"src/sass/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.home {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n"]}